# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Main

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  security-events: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
      - name: Lint
        uses: golangci/golangci-lint-action@v6.1.1
        with: 
          args: --out-format sarif:golangci-lint.sarif,colored-line-number:stdout
      - uses: actions/upload-artifact@master
        with:
          name: lint-report
          path: golangci-lint.sarif

  snyk: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
      - name: Snyk
        uses: snyk/actions/golang@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - uses: actions/upload-artifact@master
        with:
          name: snyk-report
          path: snyk.sarif

  sarif:
    if: always()
    needs: [lint, snyk]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@master
        with:
          name: lint-report
          path: golangci-lint.sarif
      - uses: actions/download-artifact@master
        with:
          name: snyk-report
          path: snyk.sarif
      - name: Upload Lint Report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: golangci-lint.sarif
      - name: Upload Snyk Report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

  report-card:
    runs-on: ubuntu-latest
    steps:
      - name: Refresh Report Card
        uses: creekorful/goreportcard-action@v1.0

  test: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
     
      - name: Test
        run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...
     
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      
      - name: Refresh Report Card
        uses: creekorful/goreportcard-action@v1.0

  test-backwards:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go_version:
          - "1.20"
          - "1.21"
          - "1.22"
          - oldstable
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go_version }}
      - run: go test -v -race ./...
